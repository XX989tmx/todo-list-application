<!DOCTYPE html>
<html lang="en">
  <head>
    <title>inbox page</title>

    <%- include('./partials/_head.ejs') %>
    <link href="/stylesheets/inbox.css" rel="stylesheet" type="text/css" />
  </head>
  <body>
    <%- include('./partials/_header.ejs') %>
    <main class="main">
      <div class="container-md fluid">
        <div class="row">
          <!-- 以下はパーシャル化
             -->

          <%- include('./partials/_sidebar.ejs') %>
          <div class="main-area col-xs-9 col-sm-8 col-md-9">
            <!-- main section -->
            <div class="main-area-inner">
              <div class="row">
                <div class="col">
                  <div>
                    <div class="inline-block inbox-mainsection-icon-area">
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="16"
                        height="16"
                        fill="currentColor"
                        class="bi bi-stack"
                        viewBox="0 0 16 16"
                        style="height: 100%; width: 100%"
                      >
                        <path
                          d="M14.12 10.163l1.715.858c.22.11.22.424 0 .534L8.267 15.34a.598.598 0 0 1-.534 0L.165 11.555a.299.299 0 0 1 0-.534l1.716-.858 5.317 2.659c.505.252 1.1.252 1.604 0l5.317-2.66zM7.733.063a.598.598 0 0 1 .534 0l7.568 3.784a.3.3 0 0 1 0 .535L8.267 8.165a.598.598 0 0 1-.534 0L.165 4.382a.299.299 0 0 1 0-.535L7.733.063z"
                        />
                        <path
                          d="M14.12 6.576l1.715.858c.22.11.22.424 0 .534l-7.568 3.784a.598.598 0 0 1-.534 0L.165 7.968a.299.299 0 0 1 0-.534l1.716-.858 5.317 2.659c.505.252 1.1.252 1.604 0l5.317-2.659z"
                        />
                      </svg>
                    </div>
                    <div class="inline-block inbox-mainsection-heading-area">
                      <h3
                        id="inbox-mainsection-heading"
                        class="inbox-mainsection-heading"
                      >
                        Inbox
                      </h3>
                    </div>
                  </div>
                </div>
              </div>
              <div id="main-section" class="main-section row">
                <div class="col-12">
                  <ul
                    class="margin-and-padding-0 list-style-none list-group todo-item-list-ul"
                  >
                    <% inbox.forEach(todo => { %>

                    <li id="todo-item-li" class="list-group-item todo-item <%= todo.priority === 1 ? "todoColorPriority1" : todo.priority === 2 ? "todoColorPriority2" : "todoColorPriority3" %> ">
                      <div class="todo-items row">
                        <div class="col-1">
                          <input
                            class="todo-checkbox"
                            type="checkbox"
                            name=""
                            id="<%- todo.id %> "
                          />
                        </div>
                        <div class="col-1" id="todo-priority">
                          <% if (todo.priority === 3) { %>
                          <span class="priority3"><%= todo.priority %> </span>
                          <% } else if (todo.priority === 2) { %>
                          <span class="priority2"><%= todo.priority %> </span>
                          <% } else { %>
                          <span class="priority1"><%= todo.priority %> </span>

                          <% } %>
                        </div>
                        <div
                          class="col-7"
                          id="todo-item"
                          data-toggle="collapse"
                          data-target="#todo-item-collapse"
                        >
                          <span value="<% todo.title %> "
                            ><%= todo.title %>
                          </span>
                        </div>
                        <div class="drag-button col-1" id="drag-button">
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            width="16"
                            height="16"
                            fill="currentColor"
                            class="bi bi-grip-vertical"
                            viewBox="0 0 16 16"
                          >
                            <path
                              d="M7 2a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zM7 5a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zM7 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"
                            />
                          </svg>
                        </div>
                        <div
                          class="col-1 update-todo-modal-trigger-button"
                          id="<%- todo.id %> "
                          data-toggle="modal"
                          data-target="#update-todo-input-modal"
                        >
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            width="16"
                            height="16"
                            fill="currentColor"
                            class="bi bi-pencil-square"
                            viewBox="0 0 16 16"
                          >
                            <path
                              d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z"
                            />
                            <path
                              fill-rule="evenodd"
                              d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z"
                            />
                          </svg>
                        </div>
                        <div
                          id="<%- todo.id %> "
                          class="col-1 delete-todo"
                          data-toggle="popover"
                          data-content="delete todo"
                          placement="right"
                        >
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            width="16"
                            height="16"
                            fill="currentColor"
                            class="bi bi-backspace"
                            viewBox="0 0 16 16"
                          >
                            <path
                              d="M5.83 5.146a.5.5 0 0 0 0 .708L7.975 8l-2.147 2.146a.5.5 0 0 0 .707.708l2.147-2.147 2.146 2.147a.5.5 0 0 0 .707-.708L9.39 8l2.146-2.146a.5.5 0 0 0-.707-.708L8.683 7.293 6.536 5.146a.5.5 0 0 0-.707 0z"
                            />
                            <path
                              d="M13.683 1a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-7.08a2 2 0 0 1-1.519-.698L.241 8.65a1 1 0 0 1 0-1.302L5.084 1.7A2 2 0 0 1 6.603 1h7.08zm-7.08 1a1 1 0 0 0-.76.35L1 8l4.844 5.65a1 1 0 0 0 .759.35h7.08a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1h-7.08z"
                            />
                          </svg>
                        </div>
                        <div
                          id="todo-item-collapse"
                          class="todo-item-collapse collapse row"
                        >
                          <div
                            id="todo-item-collapse-contents"
                            data-toggle="modal"
                            data-target="#update-todo-input-modal"
                          >
                            <p>todo notes & deadline</p>
                            <p><%= todo.notes %></p>
                            <span><%= todo.deadline %> </span>
                          </div>
                        </div>
                      </div>
                    </li>
                    <% }) %>
                  </ul>
                </div>
                <div class="col-12">
                  <div
                    id="add-todo-button"
                    data-toggle="modal"
                    data-target="#todo-input-modal"
                  >
                    <button class="add-todo-button" type="submit">
                      add todo
                    </button>
                  </div>

                  <!--　パーシャル化  -->
                  <!-- input modal. add new todo modal -->
                  <div id="todo-input-modal" class="modal fade" role="dialog">
                    <div class="modal-dialog">
                      <div class="modal-content">
                        <div class="modal-header">
                          <div class="row">
                            <div class="col-10">Add todo</div>
                            <div class="col-2">
                              <button
                                type="submit"
                                id="close-modal-button"
                                data-dismiss="modal"
                                class="btn btn-outline-dark"
                              >
                                close
                              </button>
                            </div>
                          </div>
                        </div>
                        <div class="modal-body">
                          <form
                            action="createTodo"
                            method="POST"
                            id="add-todo-form"
                            role="form"
                          >
                            <div class="form-group">
                              <label for="todo-input-title">todo name</label>
                              <input
                                class="form-control"
                                id="todo-input-title"
                                type="text"
                                name="title"
                                value=""
                                autofocus
                              />
                            </div>
                            <div class="form-group">
                              <label for="todo-input-notes">notes</label>
                              <!-- <input
                              class="modal-notes-input"
                              id="todo-input-notes"
                              type="textarea"
                              name=""
                              value=""
                            /> -->

                              <textarea
                                class="form-control"
                                rows="7"
                                id="todo-input-notes"
                                placeholder="notes"
                                name="notes"
                              ></textarea>

                              <!-- <textarea
                              rows=""
                              cols=""
                              class="modal-notes-input"
                              id="todo-input-notes"
                            ></textarea> -->
                            </div>
                            <div class="form-group">
                              <label for="priority-option">Priority:</label>
                              <select
                                class="form-control"
                                id="priority-option"
                                name="priority"
                              >
                                <option>1</option>
                                <option>2</option>
                                <option>3</option>
                              </select>
                            </div>
                            <div class="form-group">
                              <label for="todo-schedule">schedule</label>
                              <input
                                class="modal-input"
                                id="todo-schedule"
                                type="date"
                                name="scheduledDate"
                                aria-label="schedule"
                              />
                            </div>
                            <div class="form-group">
                              <label for="todo-deadline">deadline</label>
                              <input
                                class="modal-input"
                                id="todo-deadline"
                                type="date"
                                name="deadline"
                                id=""
                                aria-label="deadline"
                              />
                            </div>

                            <button
                              id="submit-addNewTodo-todo-inputs"
                              type="submit"
                              class="btn btn-success"
                            >
                              add
                            </button>
                          </form>
                        </div>
                        <div class="modal-footer">
                          <button
                            id="cancel-todo-input"
                            type="submit"
                            data-dismiss="modal"
                            class="btn btn-outline-dark"
                          >
                            cancel
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>

                  <a id="linkto-google" href="google.com" title="google"></a>
                </div>

                <!-- update existing item modal -->
                <div
                  id="update-todo-input-modal"
                  class="modal fade"
                  role="dialog"
                >
                  <div class="modal-dialog">
                    <div class="modal-content">
                      <div class="modal-header">
                        <div class="row">
                          <div class="col-10">Update todo</div>
                          <div class="col-2">
                            <button
                              type="submit"
                              id="close-modal-button"
                              data-dismiss="modal"
                              class="btn btn-outline-dark"
                            >
                              close
                            </button>
                          </div>
                        </div>
                      </div>
                      <div class="modal-body">
                        <form
                          action="/updateTodo/:targetTodoId"
                          method="POST"
                          id="update-todo-form"
                          role="form"
                        >
                          <div class="form-group">
                            <input
                              id="todoId"
                              type=""
                              name="target-todo-id"
                              value=""
                              style="display: none"
                            />
                          </div>
                          <div class="form-group">
                            <label for="todo-input-title">todo name</label>

                            <input
                              class="form-control"
                              id="update-todo-input-title"
                              type="text"
                              name="title"
                              value=""
                              placeholder="to do"
                              autofocus
                            />
                          </div>
                          <div class="form-group">
                            <label for="todo-input-notes">notes</label>
                            <textarea
                              class="form-control"
                              rows="7"
                              id="update-todo-input-notes"
                              name="notes"
                              placeholder="notes"
                            ></textarea>
                            <!-- <textarea
                            rows=""
                            cols=""
                            class="modal-notes-input"
                            id="update-todo-input-notes"
                            placeholder="notes"
                          ></textarea> -->
                          </div>
                          <div class="form-group">
                            <label for="update-priority-option"
                              >Priority:</label
                            >
                            <select
                              class="form-control"
                              id="update-priority-option"
                              name="priority"
                            >
                              <option>1</option>
                              <option>2</option>
                              <option>3</option>
                            </select>
                          </div>
                          <div class="form-group">
                            <label for="todo-schedule">schedule</label>
                            <input
                              class="modal-input"
                              id="update-todo-schedule"
                              type="date"
                              name="scheduledDate"
                              id=""
                              aria-label="schedule"
                            />
                          </div>
                          <div class="form-group">
                            <label for="todo-deadline">deadline</label>
                            <input
                              class="modal-input"
                              id="update-todo-deadline"
                              type="date"
                              name="deadline"
                              id=""
                              aria-label="deadline"
                            />
                          </div>

                          <button
                            id="update-todo-inputs"
                            type="submit"
                            class="btn btn-success"
                          >
                            Update
                          </button>
                        </form>
                      </div>
                      <div class="modal-footer">
                        <button
                          id="cancel-todo-input"
                          type="submit"
                          data-dismiss="modal"
                          class="btn btn-outline-dark"
                        >
                          cancel
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="backdrop" id="backdrop"></div>
      </div>
    </main>
    <%- include('./partials/_footer.ejs') %>
    <!-- Option 1: Bootstrap Bundle with Popper -->
    <script
      src="https://code.jquery.com/jquery-3.2.1.slim.min.js"
      integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.3/umd/popper.min.js"
      integrity="sha384-vFJXuSJphROIrBnz7yo7oB41mKfc8JzQZiCq4NCceLEaO4IHwicKwpJf9c9IpFgh"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.min.js"
      integrity="sha384-alpBpkh1PFOepccYVYDB4do5UnbKysX5WZXm3XxPqe5iKTfUKjNkCk9SaVuEZflJ"
      crossorigin="anonymous"
    ></script>

    <script>
      class Sidebar {}
    </script>

    <script src="/javascript/updateTodoBtnTriggerAction.js"></script>
    <script>
      const todoItemListUl = document.getElementById("todo-item-list-ul");
      const traverseTodoItemRecursive = (todoItemListUl) => {
        let idx = 0;
        idx += 1;
        const firstTodo = todoItemListUl.firstChild;
        return traverseTodoItemRecursive(todoItemListUl.childNodes[idx]);
      };
      traverseTodoItemRecursive(todoItemListUl);
    </script>

    <script>
      
      const todoItemList = document.querySelectorAll(".todo-item-list-ul");
      console.log(todoItemList);
      let todoItemsLi = todoItemList[0].children;
      console.log(todoItemsLi);

      for (let i = 0; i < todoItemsLi.length; i++) {
        const todoItemLi = todoItemsLi[i];
        console.log(todoItemLi);

        setTimeout(() => {
          todoItemsLi[i].style.backgroundColor = "rgb(252, 252, 252)";
        }, 700);
      }
    </script>

    <script>
      window.addEventListener("load", (event) => {
        const inboxItems = "<%- inbox %>";
        let idArr = [];
        for (let i = 0; i < inboxItems.length; i++) {
          const inboxItem = inboxItems[i];
          const itemId = inboxItem.id;
          idArr.push(itemId);
        }
        // const storage = window.localStorage;
        // storage.setItem("inboxItems", `${idArr}`);
      });
    </script>

    <script>
      // move to trash action
      const deleteHeaders = new Headers();
      deleteHeaders.append("Content-Type", "text/html");

      const init2 = {
        method: "DELETE",
        headers: deleteHeaders,
        mode: "cors",
        cache: "default",
      };

      // let request = new Request("http://localhost:8080/deleteTodo");
      const sendDeleteTodoRequest = async (request, init) => {
        try {
          await fetch(request, init);
        } catch (error) {}
      };
      const deleteTodoIcons = document.querySelectorAll(".delete-todo");
      console.log("!delete todo icons !");
      console.log(deleteTodoIcons);
      for (let i = 0; i < deleteTodoIcons.length; i++) {
        const deleteTodoIcon = deleteTodoIcons[i];
        const deleteTodoId = deleteTodoIcon.getAttribute("id");
        let body = {
          deleteTodoId,
        };
        deleteTodoIcon.addEventListener("click", async (params) => {
          console.log("move to trash!");
          console.log(deleteTodoId);
          url = "http://localhost:8080/moveToTrash/" + deleteTodoId;
          fetch(url)
            .then((result) => {
              const liElement2 = deleteTodoIcon.parentElement.parentElement;
              liElement2.style.backgroundColor = "rgb(239, 241, 242)";
              liElement2.remove();
            })
            .catch((err) => {
              console.log(err);
            });
          // let request2 = new Request(
          //   `http://localhost:8080/deleteTodo/${deleteTodoId}`
          // );
          // sendDeleteTodoRequest(request2, init2)
          //   .then((response) => {
          //     setTimeout(() => {
          //       const liElement2 = deleteTodoIcon.parentElement.parentElement;

          //       liElement2.remove();
          //     }, 1500);

          //     console.log(response);
          //   })
          //   .catch((err) => {
          //     console.log(err);
          //   });
        });
      }
    </script>

    <script>
      //complee todo request
      let headers = new Headers();
      headers.append("Content-Type", "text/html");

      const init = {
        method: "GET",
        headers: headers,
        mode: "cors",
        cache: "default",
      };

      // let request = new Request("http://localhost:8080/completeTodo");
      const sendCompleteTodoRequest = async (request, init) => {
        let response;
        try {
          await fetch(request, init);
        } catch (error) {}
      };

      const checkboxInputs = document.querySelectorAll(".todo-checkbox");
      console.log(checkboxInputs);
      for (let i = 0; i < checkboxInputs.length; i++) {
        const input = checkboxInputs[i];
        console.log("input");
        console.log(input);
        const inputId = input.getAttribute("id");
        const isChecked = input.getAttribute("value");
        console.log(isChecked);
        const completedTodoId = inputId;
        let body = {
          completedTodoId,
        };

        console.log(inputId);
        input.addEventListener("click", async () => {
          console.log("12345");
          console.log(inputId);
          url = "http://localhost:8080/completeTodo/" + inputId;
          fetch(url)
            .then((result) => {
              const LiElement = input.parentElement.parentElement.parentElement;
              LiElement.style.backgroundColor = "rgb(239, 241, 242)";
              setTimeout(() => {
                LiElement.remove();
              }, 1500);
            })
            .catch((err) => {
              console.log(err);
            });
          // let request = new Request(
          //   "http://localhost:8080/completeTodo/" + inputId
          // );
          // sendCompleteTodoRequest(request, init)
          //   .then((result) => {
          //     console.log(request);
          //     setTimeout(() => {
          //       const LiElement =
          //         input.parentElement.parentElement.parentElement;

          //       LiElement.remove();
          //     }, 1500);
          //   })
          //   .catch((err) => {
          //     console.log(err);
          //   });
        });
      }
      //
      const todos = document.querySelectorAll(".todo-item");
      console.log(todos);
      for (let i = 0; i < todos.length; i++) {
        const todoLiElement = todos[i];
        const todoRow = todoLiElement.firstChild;
      }
    </script>

    <script
      type="text/javascript"
      src="/javascript/sidebarColorChange.js"
    ></script>
    <script>
      // pop-over
      $(document).ready(function () {
        $('[data-toggle="popover"]').popover();
      });
      $("#delete-todo-button").popover({ trigger: "hover" });
      $("#update-todo-button").popover({
        trigger: "hover",
        content: "update this todo",
        placement: "right",
      });
      $("#add-todo-button").popover({
        trigger: "hover",
        content: "Add new todo",
        placement: "right",
      });
      $("#drag-button").popover({
        trigger: "hover",
        content: "Move todo item",
        placement: "left",
      });
      $("#inbox-mainsection-heading").popover({
        trigger: "hover",
        title: "Tips for using Inbox",
        content:
          "Use Inbox as temporary space for brainstorming of todo. Put task into Inbox before evaluating their importance or priority. ",
      });
      $("#todo-input-title").popover({
        trigger: "focus",
        content: "Input name of todo.",
      });
      $("#todo-input-notes").popover({
        trigger: "focus",
        content: "Notes or Additional information.",
      });
      $("#priority-option").popover({
        trigger: "focus",
        title: "Priority input",
        content:
          "Priority criteria. 1 : low importance. 2 : mid importance. 3 : high importance.",
        placement: "top",
      });
      $("#todo-schedule").popover({
        trigger: "focus",
        content: "Input target date.(optional)",
      });
      $("#todo-deadline").popover({
        trigger: "focus",
        content: "Input deadline of todo(optional).",
      });
      $("#submit-todo-inputs").popover({
        trigger: "hover focus",
        content: "Submit input information.",
      });

      $("#update-todo-input-title").popover({
        trigger: "focus",
        content: "Input name of todo.",
      });
      $("#update-todo-input-notes").popover({
        trigger: "focus",
        content: "Notes or Additional information.",
      });
      $("#update-priority-option").popover({
        trigger: "focus",
        title: "Priority input",
        content:
          "Priority criteria. 1 : low importance. 2 : mid importance. 3 : high importance.",
        placement: "top",
      });
      $("#update-todo-schedule").popover({
        trigger: "focus",
        content: "Input target date.(optional)",
      });
      $("#update-todo-deadline").popover({
        trigger: "focus",
        content: "Input deadline of todo(optional).",
      });
      $("#update-todo-inputs").popover({
        trigger: "hover focus",
        content: "Submit input information.",
      });
      $("#todo-item-collapse-contents").popover({
        trigger: "hover",
        content: "Edit",
      });

      //ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー-

      // modal
      // $(document).ready(function () {
      //   $("#todo-item-collapse-contents").modal();
      // });

      //

      //ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー-
      let addTodoBtn = document.getElementById("add-todo-button");
      addTodoBtn.addEventListener("click", () => {
        console.log("clicked");
      });

      let checkbox1 = document.getElementById("checkbox1");
      checkbox1.addEventListener("change", () => {
        console.log("checked");
      });

      let inboxMainsectionHeading = document.getElementById(
        "inbox-mainsection-heading"
      );
      inboxMainsectionHeading.addEventListener("mouseover", () => {
        console.log("mouse-over");
      });

      let todoItem1 = document.getElementById("todo-item");
      todoItem1.addEventListener("click", () => {
        console.log("clicked1");
      });

      $(document).ready(function () {
        $("#add-todo-button").on({
          click: function () {
            //   $('#inbox-mainsection-heading').removeClass('inbox-mainsection-heading').addClass('red')
            // $("#todo-input").toggle("fast");
            // $("#todo-input-title").focus().val("test");
            // console.log($("#todo-input-title").val());
            // console.log($("#inbox-sidebar-heading").html());
            // console.log($("#linkto-google").attr("href"));
            // $("#linkto-google").attr({
            //   href: "youtube.com",
            //   title: "youtube",
            // });
            // console.log($("#linkto-google").attr("href"));
            // let input2 =
            //   '<input id="todo-input-title2" type="" name="" value="" />';
            // $("#todo-input").append(input2);
          },
        });
      });

      class InboxEjsScript {
        setInboxSidebarHeadingAction() {
          let inboxSidebarHeading = document.getElementById(
            "inbox-sidebar-heading"
          );
          inboxSidebarHeading.addEventListener("mouseover", () => {
            console.log("mouse-over");
          });

          $(document).ready(function () {
            $("#inbox-sidebar-heading").on({
              click: function () {
                console.log("heading-clicked2");
              },
            });
          });
        }

        loadItem(idTagElement) {
          $(document).ready(function () {
            $("#main-section").load("inbox");
          });
        }

        addNewTodo() {
          $(document).ready(function () {
            let body = {};
            $("#add-todo-button").on({
              click: function () {
                $("#todo-input-modal").modal();
              },
            });

            // form related actions
            $("#todo-input-title").on({
              focus: function () {
                // pop help dialog?
                console.log("title focused");
              },
              blur: function () {
                // add green check dom element or show element;
                console.log("lose focus");
              },
              change: function (event) {
                console.log(event.target.value);
                body["title"] = event.target.value;
                // let todoInputTitle = document.getElementById(
                //   "todo-input-title"
                // );
                // const value = todoInputTitle.value;
                // console.log(value);
              },
            });

            $("#todo-input-notes").on({
              focus: function () {
                // pop dialog
              },
              blur: function () {
                console.log("lose focus2");
              },
              change: function (event) {
                // const todoInputNotes = document.getElementById(
                //   "todo-input-notes"
                // );
                // const value = todoInputNotes.value;
                console.log(event.target.value);
                body["notes"] = event.target.value;
              },
            });
            $("#priority-option").on({
              change: function (event) {
                console.log(event.target.value);
                body["priority"] = event.target.value;
              },
            });

            $("#todo-schedule").on({
              focus: function () {
                // pop dialog
              },
              blur: function () {
                console.log("lose focus3");
              },
              change: function (event) {
                console.log(event.target.value);
                body["schedule"] = event.target.value;
              },
            });

            $("#todo-deadline").on({
              focus: function () {
                // pop dialog
              },
              blur: function () {
                console.log("lose focus4");
              },
              change: function (event) {
                console.log(event.target.value);
                body["deadline"] = event.target.value;
                console.log(body);
              },
            });

            // $("#submit-todo-inputs").on({
            //   submit: function () {
            //     // post to backend url; ajax
            //     // event.preventDefault();
            //     // var xhr = new XMLHttpRequest();
            //     // xhr.open("POST", "http://localhost:8080/createTodo", true);
            //     // xhr.setRequestHeader("Content-Type", "application/json");
            //     // xhr.send(JSON.stringify(body));
            //   },
            // });

            $("#close-modal-button").on({
              click: function () {
                // close modal action
              },
            });

            $("#cancel-todo-input").on({
              click: function () {
                // close modal action
              },
            });

            // document
            //   .getElementById("submit-todo-inputs")
            //   .addEventListener("submit", function () {

            //   });
          });
        }

        viewTodo() {
          // in case updateTodo action could not meet a requirement, implement this.
          $(document).ready(function () {
            $("#todo-item").on({
              mouseover: function () {
                //pop over?
                console.log("show contents");
              },
            });
          });
        }

        dragTodo() {
          $(document).ready(function () {
            $("#drag-button").on({
              drag: function () {
                console.log("dragged");
              },
            });
          });
        }

        updateTodo() {
          $(document).ready(function () {
            let formData = new FormData();
            let body = {};
            $("#update-todo-button").on({
              click: function () {
                // update todo item via modal window;
                // if item is updated, send patch request to server. ajax.
                console.log("open update window");
                $("#update-todo-input-modal").modal();
              },
            });

            $("#update-todo-input-title").on({
              change: function (event) {
                console.log(event.target.value);
                body["update-todo-input-title"] = event.target.value;
              },
            });

            $("#update-todo-input-notes").on({
              change: function (event) {
                console.log(event.target.value);
                body["update-todo-input-notes"] = event.target.value;
              },
            });

            $("#update-priority-option").on({
              change: function (event) {
                console.log(event.target.value);
                body["update-priority-option"] = event.target.value;
              },
            });

            $("#update-todo-schedule").on({
              change: function (event) {
                console.log(event.target.value);
                body["update-todo-schedule"] = event.target.value;
              },
            });

            $("#update-todo-deadline").on({
              change: function (event) {
                console.log(event.target.value);

                body["update-todo-deadline"] = event.target.value;
                console.log(body);
              },
            });

            $("#update-todo-inputs").on({
              click: function (event) {
                console.log(event.target.value);
              },
            });

            // $("#update-todo-form").on({
            //   submit: function (event) {},
            // });
          });
        }

        deleteTodo() {
          $(document).ready(function () {
            $("#delete-todo-button").on({
              click: function () {
                // delete. move item into trash. send delete request to server. ajax;

                // hide todo item animation. namely add method to remove dom node of target todo item. fade animation.

                console.log("deleted");
                $("#todo-item-li").remove();
              },
            });
          });
        }

        completeTodo() {
          $(document).ready(function () {
            $("#checkbox1").on({
              click: function () {
                // complete todo item. move item into completed folder. send request to server. ajax.
                // hide todo item animation. namely add method to remove dom node of target todo item.
                $("#todo-item-li").remove();
              },
            });
          });
        }
      }
      const inbox = new InboxEjsScript();
      inbox.setInboxSidebarHeadingAction();
      inbox.addNewTodo();
      inbox.updateTodo();
      inbox.deleteTodo();
      inbox.viewTodo();
      inbox.dragTodo();
      inbox.completeTodo();

      class _AJAX {
        _sendXMLHttpRequest(method, url, async, idElement) {
          //get eg
          // xhttp.open("GET", "demo_get2.asp?fname=Henry&lname=Ford", true);
          // xhttp.send();
          // post eg
          // xhttp.open("POST", "demo_post.asp", true);
          // xhttp.send();
          const updateInnerHtml = (xhttp, idElement) => {
            document.getElementById(idElement).innerHTML = xhttp.responseText;
          };

          const xhttp = new XMLHttpRequest();
          xhttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
              // document.getElementById('#example').innerHTML = this.responseText;
              updateInnerHtml(this, idElement);
            }
          };
          xhttp.open(method, url, async);
          xhttp.send();
        }
      }
    </script>
    <script>
      // $(document).ready(function () {
      //   // SUBMIT FORM
      //   $("#add-todo-form").submit(function (event) {
      //     // Prevent the form from submitting via the browser.
      //     event.preventDefault();
      //     ajaxPost();
      //   });

      //   function ajaxPost() {
      //     // PREPARE FORM DATA
      //     const formData = {
      //       title: $("#todo-input-title").val(),
      //       notes: $("#todo-input-notes").val(),
      //       priority: $("#priority-option").val(),
      //       scheduledDate: $("#todo-schedule").val(),
      //       deadline: $("#todo-deadline").val(),
      //     };

      //     // DO POST
      //     $.ajax({
      //       type: "POST",
      //       contentType: "application/json",
      //       url: window.location + "/createTodo",
      //      data: JSON.stringify(formData),
      //       dataType: "json",
      //       success: function (addedTodo) {

      //         // $("#postResultDiv").html(
      //         //   "<p>" +
      //         //     "Post Successfully! <br>" +
      //         //     "--->" +
      //         //     JSON.stringify(customer) +
      //         //     "</p>"
      //         // );
      //       },
      //       error: function (e) {
      //         alert("Error!");
      //         console.log("ERROR: ", e);
      //       },
      //     });

      //     // Reset FormData after Posting
      //     resetData();
      //   }

      //   function resetData() {
      //     $("#firstname").val("");
      //     $("#lastname").val("");
      //   }
      // });
    </script>
  </body>
</html>
